name: Uthman CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m venv venv
        . venv/bin/activate
        pip install -r requirements.txt
        pip install pytest

    - name: Upgrade Flask
      run: |
        source venv/bin/activate
        pip install --upgrade flask    

    - name: Run tests
      run: |
        . venv/bin/activate
        pytest

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: uthycloud/task-api:latest

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
        
    - name: Create .kube directory
      run: mkdir -p $HOME/.kube

    - name: Set up kubeconfig
      run: echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config

    - name: Verify kubeconfig
      run: kubectl config view
    
    - name: Deploy to Kubernetes
      run: |
        kubectl apply --validate=false -f k8s/deployment.yaml
        kubectl apply --validate=false -f k8s/service.yaml

    - name: Set up Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.6.3

    - name: Add Helm repos
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo add grafana https://grafana.github.io/helm-charts
        helm repo update

    - name: Install Prometheus
      run: |
        helm install prometheus prometheus-community/prometheus
        kubectl expose service prometheus-server --type=NodePort --target-port=9090 --name=prometheus-server-ext

    - name: Install Grafana
      run: |
        helm install grafana grafana/grafana
        kubectl get secret --namespace default grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
        kubectl expose service grafana --type=NodePort --target-port=3000 --name=grafana-ext

